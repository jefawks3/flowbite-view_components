#!/usr/bin/env ruby
# frozen_string_literal: true

require "faraday"
require "tempfile"
require "zip"
require "fileutils"
require "nokogiri"

ROOT_DIR = File.expand_path "..", __dir__
DESTINATION_DIR = File.join ROOT_DIR, "app/assets/vendor/flowbite-icons"
TEMP_DIR = File.join ROOT_DIR, "tmp", "flowbite-icons"

def root_directory(path)
  (path.parent.to_s == ".") ? path : root_directory(path.parent)
end

def fetch(url, redirect = 0)
  response = Faraday.get url

  if response.status == 302
    if redirect > 10
      puts "Unable to download Flowbite Icons - Too many redirects!"
      exit!(-100)
    end

    fetch response.headers["location"], 1
  else
    response
  end
end

response = fetch "https://github.com/themesberg/flowbite-icons/archive/refs/heads/main.zip"

if response.status != 200
  puts "Unable to download flowbite icons [Status: #{response.status}]"
  exit!(-1)
end

FileUtils.rm_rf TEMP_DIR if Dir.exist? TEMP_DIR
FileUtils.mkdir_p TEMP_DIR unless Dir.exist? TEMP_DIR
FileUtils.mkdir_p DESTINATION_DIR unless Dir.exist? DESTINATION_DIR

zipfile_path = File.join TEMP_DIR, "flowbite-icons.zip"
File.write zipfile_path, response.body

Zip::File.open zipfile_path do |zip|
  zip.each do |file|
    next unless file.file? && file.name && file.name.match(%r{^flowbite-icons-main/src/})

    relative_path = Pathname.new(file.name).relative_path_from("flowbite-icons-main/src")
    variant = root_directory relative_path
    file_name = relative_path.basename
    destination_file = File.join DESTINATION_DIR, variant, file_name

    # Save SVG
    FileUtils.rm_f destination_file if File.exist? destination_file
    FileUtils.mkdir_p File.dirname(destination_file)
    puts "Extracting '#{relative_path}' to '#{destination_file}'"
    file.extract destination_file
  end
end
